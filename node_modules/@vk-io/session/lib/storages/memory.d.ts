import { ISessionStorage } from './storage';
export interface IMemoryStoreLike<K, V> {
    get(key: K): V | undefined;
    set(key: K, value: V): this | undefined;
    delete(key: K): boolean;
}
export interface IMemoryStorageOptions {
    store: IMemoryStoreLike<string, object>;
}
export declare class MemoryStorage implements ISessionStorage {
    private store;
    constructor({ store }?: Partial<IMemoryStorageOptions>);
    get(key: string): Promise<object | undefined>;
    set(key: string, value: object): Promise<boolean>;
    delete(key: string): Promise<boolean>;
    touch(): Promise<void>;
}
